#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import os
import time
from datetime import datetime
from elasticsearch import Elasticsearch
from azure.identity import ClientSecretCredential
from azure.mgmt.compute import ComputeManagementClient


# azure access credentials
def get_credentials():
    subscription_id = os.environ['AZURE_SUBSCRIPTION_ID']
    
    credentials = ClientSecretCredential(
    tenant_id=os.environ["AZURE_TENANT_ID"],
    client_id=os.environ["AZURE_CLIENT_ID"],
    client_secret=os.environ["AZURE_CLIENT_SECRET"]
   )

    return credentials, subscription_id
# stop AKS vmss node   
def stopAzurevm(resource_group_name,vm_scale_set_name, instance_id):
    credentials, subscription_id = get_credentials()
    client = ComputeManagementClient(credentials, subscription_id)
    response = client.virtual_machine_scale_set_vms.begin_power_off(
        resource_group_name=resource_group_name,
        vm_scale_set_name=vm_scale_set_name,
        instance_id=instance_id,
    ).result()
    if response is None:
      vmss_instance_id= vm_scale_set_name + "_" + instance_id
      print("the vmss instance id %s had been stopped" %(vmss_instance_id))  
# an query for elasticsearch  
def esquery(es, es_index, new_query):
  mydict = {}
  resp = es.search(index=es_index, query=new_query)
  count = resp['hits']['total']['value']
  print("total count %s" %(count))
  for hit in resp['hits']['hits']:
    print("%(message)s" % hit["_source"])
    for k,v in (hit["_source"]["host"]).items():
      if (k == "hostname"):
        mydict[v] = 0
  return mydict

def main():
  
  # Password for the 'elastic' user generated by Elasticsearch
  ELASTIC_PASSWORD = os.getenv("ELASTIC_PASSWORD","91c5ugIfYQ1N3v0mE4f346aT")

  # openssl s_client -connect localhost:9200 -servername localhost -showcerts </dev/null 2>/dev/null \
  #  | openssl x509 -fingerprint -sha256 -noout -in /dev/stdin
  CERT_FINGERPRINT = "0E:C5:35:DD:CC:E8:5F:B7:3A:D3:51:4B:89:96:68:9C:47:AD:E6:C9:F1:0E:6B:CC:DE:71:7C:3C:B2:91:60:08"
  # Create the client instance
  es = Elasticsearch(
      "https://localhost:9200",
      ssl_assert_fingerprint=CERT_FINGERPRINT,
      http_compress=True, 
      retry_on_timeout=True,
      basic_auth=("elastic", ELASTIC_PASSWORD)
  )
  
  #request a query per 10 second during 1 minute
  new_query =  {
     'bool': {
        'must_not': {'match': {'message': 'M('}}, 
        'must': [
            {'match_phrase': {'message': 'VF slot 1'}}, 
            {'range': {'@timestamp': {'gte': u'now-1m', 'lte': 'now'}}}
        ]
    }
  }
  
  mydict = {}
  es_index = ".ds-filebeat-8.6.2-2023.02.25-000001"
  for i in range(1, 6):
    mydict = esquery(es, es_index, new_query)
    time.sleep(10)
    for k in mydict.keys():
      if (len(k) > 0 ):
        print("issue for VF slot 1!")
        break
      else:
        print("no issue for VF slot 1!")
  #shut down aks nodes by vmss instance,theresource group of vmss must be privided as the parameter
  for k in mydict.keys():
    m = k[-6:]
    vmss = k[:-6]
    instance_id = str(int(m,36))
    rg = "MC_rg-staging-eastus_aks-staging_eastus"
    print("start to shut down aks node: %s" %(k))
    stopAzurevm(rg,vmss,instance_id)
    
if __name__ == "__main__":
    main()

      
    
    
   
    

  
  

